---
- name: Install multiple Node.js versions
  hosts: localhost
  become: yes

  vars:
    node_versions:
      - { version: "14.21.3", path: "/opt/node/v14.21.3", priority: 100 }
      - { version: "16.20.2", path: "/opt/node/v16.20.2", priority: 90 }
      - { version: "18.20.3", path: "/opt/node/v18.20.3", priority: 80 }

  tasks:
    - name: Remove existing alternatives
      shell: |
        update-alternatives --remove-all node || true
        update-alternatives --remove-all npm || true
        update-alternatives --remove-all npx || true
        update-alternatives --remove-all corepack || true

    - name: Ensure directories exist
      file:
        path: "{{ item.path }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop: "{{ node_versions }}"
      loop_control:
        loop_var: item

    - name: Download Node.js
      get_url:
        url: "https://nodejs.org/dist/v{{ item.version }}/node-v{{ item.version }}-linux-x64.tar.xz"
        dest: "/tmp/node-v{{ item.version }}-linux-x64.tar.xz"
      loop: "{{ node_versions }}"
      loop_control:
        loop_var: item

    - name: Extract Node.js
      unarchive:
        src: "/tmp/node-v{{ item.version }}-linux-x64.tar.xz"
        dest: "{{ item.path }}"
        copy: no
        creates: "{{ item.path }}/node-v{{ item.version }}-linux-x64/bin"
      loop: "{{ node_versions }}"
      loop_control:
        loop_var: item

    - name: Set up update-alternatives for node, npm, npx, and corepack
      block:
        - name: Set up alternatives for node, npm, npx, corepack
          alternatives:
            name: "{{ item.name }}"
            link: "/usr/bin/{{ item.name }}"
            path: "{{ item.path }}/node-v{{ item.version }}-linux-x64/bin/{{ item.name }}"
            priority: "{{ item.priority }}"
          loop:
            - { name: node, priority: "{{ item.priority }}" }
            - { name: npm, priority: "{{ item.priority }}" }
            - { name: npx, priority: "{{ item.priority }}" }
            - { name: corepack, priority: "{{ item.priority }}" }
      loop: "{{ node_versions }}"
      loop_control:
        loop_var: item
